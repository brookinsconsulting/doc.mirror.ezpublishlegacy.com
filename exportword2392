Message-ID: <1905761273.890.1413881956422.JavaMail.confluence@ip-10-127-227-192>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_889_960328754.1413881956422"

------=_Part_889_960328754.1413881956422
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>How to use a custom controller to display a content or location<=
/title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

#main {
    padding-bottom: 1em !important; /* The default padding of 6em is too mu=
ch for printouts */
}

body {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    font-size: 10pt;
    line-height: 1.2;
}

body, #full-height-container, #main, #page, #content, .has-personal-sidebar=
 #content {
    background: #fff    !important;
    color: #000         !important;
    border: 0           !important;
    width: 100%         !important;
    height: auto        !important;
    min-height: auto    !important;
    margin: 0           !important;
    padding: 0          !important;
    display: block      !important;
}

a, a:link, a:visited, a:focus, a:hover, a:active {
    color: #000;
}
#content h1,
#content h2,
#content h3,
#content h4,
#content h5,
#content h6 {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    page-break-after: avoid;
}
pre {
    font-family: Monaco, "Courier New", monospace;
}

#header,
.aui-header-inner,
#navigation,
#sidebar,
.sidebar,
#personal-info-sidebar,
.ia-fixed-sidebar,
.page-actions,
.navmenu,
.ajs-menu-bar,
.noprint,
.inline-control-link,
.inline-control-link a,
a.show-labels-editor,
.global-comment-actions,
.comment-actions,
.quick-comment-container,
#addcomment {
    display: none !important;
}

.comment .date::before {
    content: none !important; /* remove middot for print view */
}

h1.pagetitle img {
    height: auto;
    width: auto;
}

.print-only {
    display: block;
}
#footer {
    position: relative !important; /* CONF-17506 Place the footer at end of=
 the content */
    margin: 0;
    padding: 0;
    background: none;
    clear: both;
}

#poweredby {
    border-top: none;
    background: none;
}

#poweredby li.print-only {
    display: list-item;
    font-style: italic;
}

#poweredby li.noprint {
    display:none;
}


/* no width controls in print */
.wiki-content .table-wrap,
.wiki-content p,
.panel .codeContent,
.panel .codeContent pre,
.image-wrap {
    overflow: visible !important;
}

/* TODO - should this work? */
#children-section,
#comments-section .comment,
#comments-section .comment .comment-body,
#comments-section .comment .comment-content,
#comments-section .comment p {
    page-break-inside: avoid;
}

#page-children a {
    text-decoration: none;
}

/**
 hide twixies

 the specificity here is a hack because print styles
 are getting loaded before the base styles. */
#comments-section.pageSection .section-header,
#comments-section.pageSection .section-title,
#children-section.pageSection .section-header,
#children-section.pageSection .section-title,
.children-show-hide {
    padding-left: 0;
    margin-left: 0;
}

.children-show-hide.icon {
    display: none;
}

/* personal sidebar */
.has-personal-sidebar #content {
    margin-right: 0px;
}

.has-personal-sidebar #content .pageSection {
    margin-right: 0px;
}
-->
    </style>
</head>
<body>
    <h1>How to use a custom controller to display a content or location</h1=
>
    <div class=3D"Section1">
        <div class=3D"aui-message warning shadowed information-macro">=20
<p class=3D"title">Version compatibility</p>=20
<span class=3D"aui-icon icon-warning">Icon</span>=20
<div class=3D"message-content">=20
<p>This recipe is compatible with <strong>eZ Publish 5.2 / 2013.07</strong>=
</p>=20
</div>=20
</div>=20
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1413881956374 {padding: 0px;}
div.rbtoc1413881956374 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1413881956374 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1413881956374">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Howtouseacustomcontrollertodisplayacontentorlocation-Enhanc=
edviewsforContent/Location">Enhanced views for Content/Location</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Howtouseacustomcontrollertodisplayacontentorlocation-Descri=
ption">Description</a></li>=20
<li><a href=3D"#Howtouseacustomcontrollertodisplayacontentorlocation-Matchi=
ngcustomcontrollers">Matching custom controllers</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Howtouseacustomcontrollertodisplayacontentorlocation-Origin=
alViewControllersignatures">Original ViewController signatures</a></li>=20
</ul> </li>=20
<li><a href=3D"#Howtouseacustomcontrollertodisplayacontentorlocation-Exampl=
es">Examples</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#Howtouseacustomcontrollertodisplayacontentorlocation-Enrich=
ingbuilt-inViewController">Enriching built-in ViewController</a></li>=20
<li><a href=3D"#Howtouseacustomcontrollertodisplayacontentorlocation-Usinga=
customcontrollertogetfullcontrol">Using a custom controller to get full con=
trol</a></li>=20
</ul> </li>=20
<li><a href=3D"#Howtouseacustomcontrollertodisplayacontentorlocation-Overri=
dingthebuilt-inViewController">Overriding the built-in ViewController</a></=
li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h1 id=3D"Howtouseacustomcontrollertodisplayacontentorlocation-Enhancedview=
sforContent/Location">Enhanced views for Content/Location</h1>
<p>In some cases, displaying a content/location via the built-in <code>View=
Controller</code> is not sufficient and will lead you to do many sub-reques=
ts in order to access different parameters.</p>
<p>Typical use cases are access to:</p>
<ul>
<li>Settings (either coming from <code>ConfigResolver</code> or <code>Servi=
ceContainer</code>)</li>
<li>Current content's <code>ContentType</code> object</li>
<li>Current location's parent</li>
<li>Current location's children count</li>
<li>Main location and alternative locations for the current content</li>
<li>etc=E2=80=A6</li>
</ul>
<p>In those cases, you may want to <strong>use your own controller</strong>=
 to display the current content/location instead of using the built-in&nbsp=
;<code>ViewController</code>.</p>
<h2 id=3D"Howtouseacustomcontrollertodisplayacontentorlocation-Description"=
>Description</h2>
<p>This feature covers 2 general use cases:</p>
<ul>
<li>Lets you configure a custom controller with the configured matcher rule=
s.</li>
<li>Lets you override the built-in view controller in a clean way.</li>
</ul>
<h2 id=3D"Howtouseacustomcontrollertodisplayacontentorlocation-Matchingcust=
omcontrollers">Matching custom controllers</h2>
<p>This is possible with the following piece of configuration:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">ezpublish:
    system:
        my_siteaccess:
            location_view:
                full:
                    # Defining a ruleset matching a location and pointing t=
o a controller
                    my_ruleset:
                        # The following will let you use your own custom co=
ntroller for location #123
                        # (Here it will use AcmeTestBundle/Controller/Defau=
ltController::viewLocationAction(),
                        # following the Symfony controller notation convent=
ion.
                        # Method viewLocationAction() must follow the same =
prototype as in the built-in ViewController
                        controller: AcmeTestBundle:Default:viewLocation
                        match:
                            Id\Location: 123</pre>=20
</div>
</div>=20
<div class=3D"aui-message hint shadowed information-macro">=20
<span class=3D"aui-icon icon-hint">Icon</span>=20
<div class=3D"message-content">=20
<p>You can point to any kind of <a href=3D"http://symfony.com/doc/current/b=
ook/page_creation.html#step-2-create-the-controller" class=3D"external-link=
" rel=3D"nofollow">controller supported by Symfony</a> (including <a href=
=3D"http://symfony.com/doc/current/cookbook/controller/service.html" class=
=3D"external-link" rel=3D"nofollow">controllers as a service</a>).</p>=20
</div>=20
</div>=20
<p><span style=3D"font-size: 10.0pt;line-height: 13.0pt;">The only requirem=
ent here is that your action method has a similar signature than&nbsp;</spa=
n><code style=3D"font-size: 10.0pt;line-height: 13.0pt;">ViewController::vi=
ewLocation()</code><span style=3D"font-size: 10.0pt;line-height: 13.0pt;">&=
nbsp;or&nbsp;</span><code style=3D"font-size: 10.0pt;line-height: 13.0pt;">=
ViewController::viewContent()</code><span style=3D"font-size: 10.0pt;line-h=
eight: 13.0pt;">&nbsp;(depending on what you're matching of course). Howeve=
r, note that all arguments are not mandatory since </span><a href=3D"http:/=
/symfony.com/doc/current/book/routing.html#route-parameters-and-controller-=
arguments" style=3D"font-size: 10.0pt;line-height: 13.0pt;" class=3D"extern=
al-link" rel=3D"nofollow">Symfony is clever enough to know what to inject i=
n your action method</a><span style=3D"font-size: 10.0pt;line-height: 13.0p=
t;">. Hence <strong>you're not forced to mimic the <code>ViewController</co=
de>'s signature strictly</strong>. For example, if you omit <code>$layout</=
code> and <code>$params</code> arguments, it will be still valid. Symfony w=
ill just avoid to inject them in your action method.</span></p>
<h3 id=3D"Howtouseacustomcontrollertodisplayacontentorlocation-OriginalView=
Controllersignatures">Original ViewController signatures</h3>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>viewLocation() signature</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">/**
 * Main action for viewing content through a location in the repository.
 *
 * @param int $locationId
 * @param string $viewType
 * @param boolean $layout
 * @param array $params
 *
 * @throws \Symfony\Component\Security\Core\Exception\AccessDeniedException
 * @throws \Exception
 *
 * @return \Symfony\Component\HttpFoundation\Response
 */
public function viewLocation( $locationId, $viewType, $layout =3D false, ar=
ray $params =3D array() )</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>viewContent() signature</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">/**
 * Main action for viewing content.
 *
 * @param int $contentId
 * @param string $viewType
 * @param boolean $layout
 * @param array $params
 *
 * @throws \Symfony\Component\Security\Core\Exception\AccessDeniedException
 * @throws \Exception
 *
 * @return \Symfony\Component\HttpFoundation\Response
 */
public function viewContent( $contentId, $viewType, $layout =3D false, arra=
y $params =3D array() )</pre>=20
</div>
</div>=20
<div class=3D"aui-message hint shadowed information-macro">=20
<p class=3D"title">Note</p>=20
<span class=3D"aui-icon icon-hint">Icon</span>=20
<div class=3D"message-content">=20
<p>Controller selection doesn't apply to <code>block_view</code> since you =
can already <a href=3D"/display/EZP/The+Page+FieldType#ThePageFieldType-The=
PageFieldType-Renderingblocks">use your own controller to display blocks</a=
>.</p>=20
</div>=20
</div>=20
<div class=3D"aui-message problem shadowed information-macro">=20
<p class=3D"title">Warning on caching</p>=20
<span class=3D"aui-icon icon-problem">Icon</span>=20
<div class=3D"message-content">=20
<p>Using your own controller,&nbsp;<u><strong>it is&nbsp;your responsibilit=
y to define cache rules</strong></u>, like for every custom controller !</p=
>
<p>So don't forget to <strong>set cache rules</strong> and the appropriate&=
nbsp;<strong><code>X-Location-Id</code>&nbsp;header</strong> in the returne=
d&nbsp;<code>Response</code>&nbsp;object.</p>
<p><a href=3D"https://github.com/ezsystems/ezpublish-kernel/blob/master/eZ/=
Publish/Core/MVC/Symfony/Controller/Content/ViewController.php#L76" class=
=3D"external-link" rel=3D"nofollow">See built-in ViewController</a>&nbsp;fo=
r more details on this.</p>=20
</div>=20
</div>=20
<h2 id=3D"Howtouseacustomcontrollertodisplayacontentorlocation-Examples">Ex=
amples</h2>
<h3 id=3D"Howtouseacustomcontrollertodisplayacontentorlocation-Enrichingbui=
lt-inViewController">Enriching built-in ViewController</h3>
<p>This example shows how to use a custom controller to enrich the final co=
nfigured view template. Your controller will here forward the request to th=
e built-in&nbsp;<code>ViewController</code>&nbsp;with some additional param=
eters.</p>=20
<div class=3D"aui-message success shadowed information-macro">=20
<span class=3D"aui-icon icon-success">Icon</span>=20
<div class=3D"message-content">=20
<strong>This is usually the recommended way to use a custom controller.</st=
rong>=20
</div>=20
</div>=20
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>ezpublish.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">ezpublish:
    system:
        ezdemo_frontend_group:
            location_view:
                full:
                    article_test:
                        # Configuring both controller and template as the c=
ontroller will forward
                        # the request to the ViewController which will rend=
er the configured template.
                        controller: AcmeTestBundle:Default:articleViewEnhan=
ced
                        template: AcmeTestBundle:full:article_test.html.twi=
g
                        match:
                            Identifier\ContentType: [article]</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Controller</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">&lt;?php
namespace Acme\TestBundle\Controller;
use Symfony\Component\HttpFoundation\Response;
use eZ\Bundle\EzPublishCoreBundle\Controller;

class DefaultController extends Controller
{
    public function articleViewEnhancedAction( $locationId, $viewType, $lay=
out =3D false, array $params =3D array() )
    {
        $params +=3D array( 'myCustomVariable' =3D&gt; &quot;Hey, I'm a cus=
tom message!&quot; );
        // Forward the request to the original ViewController
        // And get the response. Eventually alter it (here we change the sm=
ax-age for cache).
        $response =3D $this-&gt;get( 'ez_content' )-&gt;viewLocation( $loca=
tionId, $viewType, $layout, $params );
        $response-&gt;setSharedMaxAge( 600 );

        return $response;
    }
}</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>article_test.html.twig</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">{% extends noLayout ? viewbaseLayout : &quot;eZDemoBundle::pagelayo=
ut.html.twig&quot; %}

{% block content %}
    &lt;h1&gt;{{ ez_render_field( content, 'title' ) }}&lt;/h1&gt;
    &lt;h2&gt;{{ myCustomVariable }}&lt;/h2&gt;
    {{ ez_render_field( content, 'body' ) }}
{% endblock %}</pre>=20
</div>
</div>
<h3 id=3D"Howtouseacustomcontrollertodisplayacontentorlocation-Usingacustom=
controllertogetfullcontrol">Using a custom controller to get full control</=
h3>
<p>This example shows you how to configure and use your own controller to h=
andle a location.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>ezpublish.yml</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">ezpublish:
    system:
        ezdemo_frontend_group:
            location_view:
                full:
                    my_ruleset:
                        controller: AcmeTestBundle:Default:viewFolder
                        match:
                            Identifier\ContentType: [folder]
                            Identifier\Section: [standard]</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Controller</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">&lt;?php
namespace Acme\TestBundle\Controller;
use Symfony\Component\HttpFoundation\Response;
use eZ\Bundle\EzPublishCoreBundle\Controller;

class DefaultController extends Controller
{
    public function viewFolderAction( $locationId, $layout =3D false )
    {
        $repository =3D $this-&gt;getRepository();
        $location =3D $repository-&gt;getLocationService()-&gt;loadLocation=
( $locationId );
        $response =3D new Response();
        $response-&gt;headers-&gt;set( 'X-Location-Id', $locationId );
        // Caching for 1h and make the cache vary on user hash
        $response-&gt;setSharedMaxAge( 3600 );
        $response-&gt;setVary( 'X-User-Hash' );
        return $this-&gt;render(
            'AcmeTestBundle::custom_controller_folder.html.twig',
            array(
                'location' =3D&gt; $location,
                'content' =3D&gt; $repository-&gt;getContentService()-&gt;l=
oadContentByContentInfo( $location-&gt;getContentInfo() ),
                'foo' =3D&gt; 'Hey world!!!',
                'osTypes' =3D&gt; array( 'osx', 'linux', 'losedows' )
            )
        );
    }
}

</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>custom_controller_folder.html.twig</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">{% extends &quot;eZDemoBundle::pagelayout.html.twig&quot; %}

{% block content %}
&lt;h1&gt;{{ ez_render_field( content, 'title' ) }}&lt;/h1&gt;
    &lt;h1&gt;{{ foo }}&lt;/h1&gt;
    &lt;ul&gt;
    {% for os in osTypes %}
        &lt;li&gt;{{ os }}&lt;/li&gt;
    {% endfor %}
    &lt;/ul&gt;
{% endblock %}
</pre>=20
</div>
</div>
<h2 id=3D"Howtouseacustomcontrollertodisplayacontentorlocation-Overridingth=
ebuilt-inViewController">Overriding the built-in ViewController</h2>
<p>One other way to keep control on what is passed to the view is to use yo=
ur own controller instead of the built-in ViewController.</p>
<p>Base ViewController being defined as a service, with a service alias, th=
is can be easily achieved from your bundle's configuration:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">parameters:
    my.custom.view_controller.class: Acme\TestBundle\MyViewController

services:
    my.custom.view_controller:
        class: %my.custom.view_controller.class%
        arguments: [@some_dependency, @other_dependency]

    # Change the alias here and make it point to your own controller
    ez_content:
        alias: my.custom.view_controller</pre>=20
</div>
</div>=20
<div class=3D"aui-message problem shadowed information-macro">=20
<p class=3D"title">Warning</p>=20
<span class=3D"aui-icon icon-problem">Icon</span>=20
<div class=3D"message-content">=20
<p>Doing so will completely override the built-in ViewController! Use this =
at your own risk!</p>=20
</div>=20
</div>=20
<div class=3D"aui-message hint shadowed information-macro">=20
<p class=3D"title">See also</p>=20
<span class=3D"aui-icon icon-hint">Icon</span>=20
<div class=3D"message-content">=20
<p>See also</p>
<p><a href=3D"https://confluence.ez.no/display/EZP/Content+view#Contentview=
-Displayadefaulttext" class=3D"external-link" rel=3D"nofollow">How to Displ=
ay a default text while asynchronous loading of a controller</a></p>
<p><a href=3D"https://doc.ez.no/display/EZP/Content+view#Contentview-Render=
embeddedcontentobjects" rel=3D"nofollow">How to render an embedded content =
from a Twig template</a></p>=20
</div>=20
</div>=20
<p>&nbsp;</p>
<p>&nbsp;</p>
    </div>
</body>
</html>
------=_Part_889_960328754.1413881956422--
