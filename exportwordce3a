Message-ID: <749507526.1068.1413885883757.JavaMail.confluence@ip-10-127-227-192>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_1067_290089688.1413885883757"

------=_Part_1067_290089688.1413885883757
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Search Criterions and Sort Clauses</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

#main {
    padding-bottom: 1em !important; /* The default padding of 6em is too mu=
ch for printouts */
}

body {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    font-size: 10pt;
    line-height: 1.2;
}

body, #full-height-container, #main, #page, #content, .has-personal-sidebar=
 #content {
    background: #fff    !important;
    color: #000         !important;
    border: 0           !important;
    width: 100%         !important;
    height: auto        !important;
    min-height: auto    !important;
    margin: 0           !important;
    padding: 0          !important;
    display: block      !important;
}

a, a:link, a:visited, a:focus, a:hover, a:active {
    color: #000;
}
#content h1,
#content h2,
#content h3,
#content h4,
#content h5,
#content h6 {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    page-break-after: avoid;
}
pre {
    font-family: Monaco, "Courier New", monospace;
}

#header,
.aui-header-inner,
#navigation,
#sidebar,
.sidebar,
#personal-info-sidebar,
.ia-fixed-sidebar,
.page-actions,
.navmenu,
.ajs-menu-bar,
.noprint,
.inline-control-link,
.inline-control-link a,
a.show-labels-editor,
.global-comment-actions,
.comment-actions,
.quick-comment-container,
#addcomment {
    display: none !important;
}

.comment .date::before {
    content: none !important; /* remove middot for print view */
}

h1.pagetitle img {
    height: auto;
    width: auto;
}

.print-only {
    display: block;
}
#footer {
    position: relative !important; /* CONF-17506 Place the footer at end of=
 the content */
    margin: 0;
    padding: 0;
    background: none;
    clear: both;
}

#poweredby {
    border-top: none;
    background: none;
}

#poweredby li.print-only {
    display: list-item;
    font-style: italic;
}

#poweredby li.noprint {
    display:none;
}


/* no width controls in print */
.wiki-content .table-wrap,
.wiki-content p,
.panel .codeContent,
.panel .codeContent pre,
.image-wrap {
    overflow: visible !important;
}

/* TODO - should this work? */
#children-section,
#comments-section .comment,
#comments-section .comment .comment-body,
#comments-section .comment .comment-content,
#comments-section .comment p {
    page-break-inside: avoid;
}

#page-children a {
    text-decoration: none;
}

/**
 hide twixies

 the specificity here is a hack because print styles
 are getting loaded before the base styles. */
#comments-section.pageSection .section-header,
#comments-section.pageSection .section-title,
#children-section.pageSection .section-header,
#children-section.pageSection .section-title,
.children-show-hide {
    padding-left: 0;
    margin-left: 0;
}

.children-show-hide.icon {
    display: none;
}

/* personal sidebar */
.has-personal-sidebar #content {
    margin-right: 0px;
}

.has-personal-sidebar #content .pageSection {
    margin-right: 0px;
}
-->
    </style>
</head>
<body>
    <h1>Search Criterions and Sort Clauses</h1>
    <div class=3D"Section1">
        <div class=3D"aui-message warning shadowed information-macro">=20
<p class=3D"title">Version compatibility</p>=20
<span class=3D"aui-icon icon-warning">Icon</span>=20
<div class=3D"message-content">=20
<p>This recipe is compatible with <strong>eZ Publish 5.3 <br /></strong></p=
>=20
</div>=20
</div>=20
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1413885883709 {padding: 0px;}
div.rbtoc1413885883709 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1413885883709 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1413885883709">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SearchCriterionsandSortClauses-Introduction">Introduction</=
a></li>=20
<li><a href=3D"#SearchCriterionsandSortClauses-HandlingofCriterionsandSortC=
lauses">Handling of Criterions and Sort Clauses</a></li>=20
<li><a href=3D"#SearchCriterionsandSortClauses-CustomCriterionsandSortClaus=
es">Custom Criterions and Sort Clauses</a></li>=20
<li><a href=3D"#SearchCriterionsandSortClauses-DifferencebetweenContentandL=
ocationSearch">Difference between Content and Location Search</a></li>=20
<li><a href=3D"#SearchCriterionsandSortClauses-HowtoconfigureyourownCriteri=
onandSortClauseHandlers">How to configure your own Criterion and Sort Claus=
e Handlers</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#SearchCriterionsandSortClauses-ExampleofregisteringContentI=
dCriterionhandler,commonforbothContentandLocationSearch">Example of registe=
ring ContentId Criterion handler, common for both Content and Location Sear=
ch</a></li>=20
<li><a href=3D"#SearchCriterionsandSortClauses-ExampleofregisteringDepthSor=
tClausehandlerforLocationSearch">Example of registering Depth Sort Clause h=
andler for Location Search</a></li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<h2 id=3D"SearchCriterionsandSortClauses-Introduction">Introduction</h2>
<p>Search Criterions and Sort Clauses are value object classes used for bui=
lding Search Query, to define filter criteria and ordering of the result se=
t. eZ Publish provides a number of standard Criterions and Sort Clauses tha=
t you can use out of the box and that should cover the majority of use case=
s.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Example of standard ContentId criterion</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: true" style=3D"font-size:=
12px;">&lt;?php

namespace eZ\Publish\API\Repository\Values\Content\Query\Criterion;

use eZ\Publish\API\Repository\Values\Content\Query\Criterion;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion\Operator\Speci=
fications;
use eZ\Publish\API\Repository\Values\Content\Query\CriterionInterface;

/**
 * A criterion that matches content based on its id
 *
 * Supported operators:
 * - IN: will match from a list of ContentId
 * - EQ: will match against one ContentId
 */
class ContentId extends Criterion implements CriterionInterface
{
    /**
     * Creates a new ContentId criterion
     *
     * @param int|int[] $value One or more content Id that must be matched.
     *
     * @throws \InvalidArgumentException if a non numeric id is given
     * @throws \InvalidArgumentException if the value type doesn't match th=
e operator
     */
    public function __construct( $value )
    {
        parent::__construct( null, null, $value );
    }

    public function getSpecifications()
    {
        $types =3D Specifications::TYPE_INTEGER | Specifications::TYPE_STRI=
NG;
        return array(
            new Specifications( Operator::IN, Specifications::FORMAT_ARRAY,=
 $types ),
            new Specifications( Operator::EQ, Specifications::FORMAT_SINGLE=
, $types ),
        );
    }

    public static function createFromQueryBuilder( $target, $operator, $val=
ue )
    {
        return new self( $value );
    }
}</pre>=20
</div>
</div>
<h2 id=3D"SearchCriterionsandSortClauses-HandlingofCriterionsandSortClauses=
">Handling of Criterions and Sort Clauses</h2>
<p>Criterions and Sort Clauses are value objects, which are used to define =
the Query. This means they do not handle the storage engine. Being a part o=
f API, they are instead common for all storage engines. Each storage engine=
 needs to implement its own handlers for corresponding Criterions and Sort =
Clauses, which will be used to translate the value object into storage spec=
ific search query.</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Example of ContentId criterion handler in Legacy Storage Engine</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: true" style=3D"font-size:=
12px;">&lt;?php

namespace eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\=
CriterionHandler;

use eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\Criter=
ionHandler;
use eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\Criter=
iaConverter;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion;
use eZ\Publish\Core\Persistence\Database\SelectQuery;

/**
 * Content ID criterion handler
 */
class ContentId extends CriterionHandler
{
    /**
     * Check if this criterion handler accepts to handle the given criterio=
n.
     *
     * @param \eZ\Publish\API\Repository\Values\Content\Query\Criterion $cr=
iterion
     *
     * @return boolean
     */
    public function accept( Criterion $criterion )
    {
        return $criterion instanceof Criterion\ContentId;
    }


    /**
     * Generate query expression for a Criterion this handler accepts
     *
     * accept() must be called before calling this method.
     *
     * @param \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gat=
eway\CriteriaConverter $converter
     * @param \eZ\Publish\Core\Persistence\Database\SelectQuery $query
     * @param \eZ\Publish\API\Repository\Values\Content\Query\Criterion $cr=
iterion
     *
     * @return \eZ\Publish\Core\Persistence\Database\Expression
     */
    public function handle( CriteriaConverter $converter, SelectQuery $quer=
y, Criterion $criterion )
    {
        return $query-&gt;expr-&gt;in(
            $this-&gt;dbHandler-&gt;quoteColumn( &quot;id&quot;, &quot;ezco=
ntentobject&quot; ),
            $criterion-&gt;value
        );
    }
}</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Example of ContentId criterion handler in Solr Storage engine</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: true" style=3D"font-size:=
12px;">&lt;?php

namespace eZ\Publish\Core\Persistence\Solr\Content\Search\CriterionVisitor;

use eZ\Publish\Core\Persistence\Solr\Content\Search\CriterionVisitor;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion;
use eZ\Publish\API\Repository\Values\Content\Query\Criterion\Operator;

/**
 * Visits the ContentId criterion
 */
class ContentIdIn extends CriterionVisitor
{
    /**
     * CHeck if visitor is applicable to current criterion
     *
     * @param Criterion $criterion
     *
     * @return boolean
     */
    public function canVisit( Criterion $criterion )
    {
        return
            $criterion instanceof Criterion\ContentId &amp;&amp;
            ( ( $criterion-&gt;operator ?: Operator::IN ) =3D=3D=3D Operato=
r::IN ||
              $criterion-&gt;operator =3D=3D=3D Operator::EQ );
    }


    /**
     * Map field value to a proper Solr representation
     *
     * @param Criterion $criterion
     * @param CriterionVisitor $subVisitor
     *
     * @return string
     */
    public function visit( Criterion $criterion, CriterionVisitor $subVisit=
or =3D null )
    {
        return '(' .
            implode(
                ' OR ',
                array_map(
                    function ( $value )
                    {
                        return 'id:&quot;' . $value . '&quot;';
                    },
                    $criterion-&gt;value
                )
            ) .
            ')';
    }
}</pre>=20
</div>
</div>
<h2 id=3D"SearchCriterionsandSortClauses-CustomCriterionsandSortClauses">Cu=
stom Criterions and Sort Clauses</h2>
<p>Sometimes you will find that standard Criterions and Sort Clauses provid=
ed with eZ Publish are not sufficient for you needs. Most often this will b=
e the case if you have developed a custom FieldType using external storage,=
 which therefore can not be searched using standard Field Criterion.</p>
<p>In this case you can implement a custom Criterion or Sort Clause, togeth=
er with the corresponding handlers for the storage engine you are using.</p=
>
<h2 id=3D"SearchCriterionsandSortClauses-DifferencebetweenContentandLocatio=
nSearch">Difference between Content and Location Search</h2>
<p>These are two basic types of searches, you can either search for Locatio=
ns or for Content. Each has dedicated methods in Search Service:</p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Type of search</th>
<th class=3D"confluenceTh">Method in Search Service</th>
</tr>
<tr>
<td class=3D"confluenceTd">Content</td>
<td class=3D"confluenceTd"><code>findContent()</code></td>
</tr>
<tr>
<td colspan=3D"1" class=3D"confluenceTd">Content</td>
<td colspan=3D"1" class=3D"confluenceTd"><code>findSingle()</code></td>
</tr>
<tr>
<td class=3D"confluenceTd">Location</td>
<td class=3D"confluenceTd"><code>findLocations()</code></td>
</tr>
</tbody>
</table>
</div>
<p>All Criterions and Sort Clauses will be accepted with Location Search, b=
ut not all of them can be used with Content Search. Reason for this is that=
 while one Location always has exactly one Content, one Content can have mu=
ltiple Locations. In this context some Criterions and Sort Clauses would pr=
oduce ambiguous queries and such will therefore not be accepted by Content =
Search.</p>
<p>Content Search will explicitly refuse to accept Criterions and Sort Clau=
ses implementing these abstract classes:</p>
<ul>
<li><pre>eZ\Publish\API\Repository\Values\Content\Query\<span>Criterion\</s=
pan>Location</pre></li>
<li><pre>eZ\Publish\API\Repository\Values\Content\SortClause\<span>Criterio=
n\</span>Location</pre></li>
</ul>
<h2 id=3D"SearchCriterionsandSortClauses-HowtoconfigureyourownCriterionandS=
ortClauseHandlers">How to configure your own Criterion and Sort Clause Hand=
lers</h2>
<p>After you have implemented your Criterion / Sort Clause and its handler,=
 you will need to configure the handler for the service container using ded=
icated service tags for each type of search. Doing so will automatically re=
gister it and handle your Criterion / Search Clause when it is given as a p=
arameter to one of the Search Service methods.</p>
<p>Available tags for Criterion handlers in Legacy Storage Engine are:</p>
<ul>
<li><code>ezpublish.persistence.legacy.search.gateway.criterion_handler.con=
tent</code></li>
<li><code>ezpublish.persistence.legacy.search.gateway.criterion_handler.loc=
ation</code></li>
</ul>
<p>Available tags for Sort Clause handlers in Legacy Storage Engine are:</p=
>
<ul>
<li><code>ezpublish.persistence.legacy.search.gateway.sort_clause_handler.c=
ontent</code></li>
<li><code>ezpublish.persistence.legacy.search.gateway.sort_clause_handler.l=
ocation</code></li>
</ul>=20
<div class=3D"aui-message hint shadowed information-macro">=20
<span class=3D"aui-icon icon-hint">Icon</span>=20
<div class=3D"message-content">=20
<p>You will find all the native handlers and the tags for the Legacy Storag=
e Engine available in the eZ/Publish/Core/settings/storage_engines/legacy<s=
pan class=3D"separator">/</span><strong class=3D"final-path">search_query_h=
andlers.yml</strong> file.</p>=20
</div>=20
</div>=20
<h3 id=3D"SearchCriterionsandSortClauses-ExampleofregisteringContentIdCrite=
rionhandler,commonforbothContentandLocationSearch">Example of registering C=
ontentId Criterion handler, common for both Content and Location Search</h3=
>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Registering Criterion handler</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: bash; gutter: false" style=3D"font-siz=
e:12px;">services:
  &nbsp; ezpublish.persistence.legacy.search.gateway.criterion_handler.comm=
on.content_id:
        class: eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gat=
eway\CriterionHandler\ContentId
        arguments: [@ezpublish.api.storage_engine.legacy.dbhandler]
        tags:
          - {name: ezpublish.persistence.legacy.search.gateway.criterion_ha=
ndler.content}
          - {name: ezpublish.persistence.legacy.search.gateway.criterion_ha=
ndler.location}</pre>=20
</div>
</div>
<h3 id=3D"SearchCriterionsandSortClauses-ExampleofregisteringDepthSortClaus=
ehandlerforLocationSearch">Example of registering Depth Sort Clause handler=
 for Location Search</h3>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Registering Sort Clause handler</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: bash; gutter: false" style=3D"font-siz=
e:12px;">ezpublish.persistence.legacy.search.gateway.sort_clause_handler.lo=
cation.depth:
    class: eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gatew=
ay\SortClauseHandler\Location\Depth
    arguments: [@ezpublish.api.storage_engine.legacy.dbhandler]
    tags:
        - {name: ezpublish.persistence.legacy.search.gateway.sort_clause_ha=
ndler.location}</pre>=20
</div>
</div>=20
<div class=3D"aui-message hint shadowed information-macro">=20
<p class=3D"title">See also</p>=20
<span class=3D"aui-icon icon-hint">Icon</span>=20
<div class=3D"message-content">=20
<p>See also <a href=3D"http://symfony.com/doc/current/book/service_containe=
r.html#service-parameters" class=3D"external-link" rel=3D"nofollow">Symfony=
 documentation about Service Container</a> for passing parameters</p>=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_1067_290089688.1413885883757--
