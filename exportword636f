Message-ID: <297585745.2764.1485850732572.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_2763_1990135610.1485850732572"

------=_Part_2763_1990135610.1485850732572
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Converting request parameters into API objects</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Converting request parameters into API objects</h1>
    <div class=3D"Section1">
        <div class=3D"contentLayout2">=20
<div class=3D"columnLayout two-right-sidebar" data-layout=3D"two-right-side=
bar">=20
<div class=3D"cell normal" data-type=3D"normal">=20
<div class=3D"innerCell">=20
<h1 id=3D"ConvertingrequestparametersintoAPIobjects-Description">Descriptio=
n</h1>
<p>In lots of cases, a request will provide a contentId or a locationId. Be=
fore using them, you will have to load API object within your controller.</=
p>
<h1 id=3D"ConvertingrequestparametersintoAPIobjects-Solution">Solution</h1>
<p>For example:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">public function listBlogPostsAction( $locationId )
{
=09$location =3D $repository-&gt;getLocationService()-&gt;loadLocation( $lo=
cationId );</pre>=20
</div>
</div>
<p>Thanks to the param converter, you can directly have the API object at y=
our disposal. All you have to do is:</p>
<ul style=3D"list-style-type: square;">
<li>For Locations:
<ul style=3D"list-style-type: square;">
<li>In your controller's signature, type int the variable to Location.</li>
<li>Make sure a parameter named "locationId" is provided by the request.</l=
i>
</ul></li>
<li>For Content items:
<ul style=3D"list-style-type: square;">
<li>In your controller's signature, typeint the variable to Content</li>
<li>Make sure a parameter named "contentId" is provided by the request</li>
</ul></li>
</ul>
<h1 id=3D"ConvertingrequestparametersintoAPIobjects-Example">Example</h1>
<p>Example using Locations:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">use eZ\Publish\API\Repository\Values\Content\Location;

public function listBlogPostsAction( Location $location )
{
=09// use my $location object</pre>=20
</div>
</div>
<h2 id=3D"ConvertingrequestparametersintoAPIobjects-Furtherinformation">Fur=
ther information</h2>
<p>If you want to understand how it works, you can check <a href=3D"http://=
symfony.com/doc/master/bundles/SensioFrameworkExtraBundle/annotations/conve=
rters.html" class=3D"external-link" rel=3D"nofollow">Symfony's param conver=
ter documentation</a> and the <a href=3D"https://github.com/ezsystems/ezpub=
lish-kernel/pull/1128" class=3D"external-link" rel=3D"nofollow">pull reques=
t implementing the Repository ParamConverters</a>.</p>
<h2 id=3D"ConvertingrequestparametersintoAPIobjects-Migratingyourcurrentapp=
lication">Migrating your current application</h2>
<p><a href=3D"https://github.com/ezsystems/DemoBundle/pull/129/files" class=
=3D"external-link" rel=3D"nofollow">See example pull request on the DemoBun=
dle</a> which provides a few concrete examples.</p>
</div>=20
</div>=20
<div class=3D"cell aside" data-type=3D"aside">=20
<div class=3D"innerCell">=20
<h4 id=3D"ConvertingrequestparametersintoAPIobjects-Inthistopic:">In this t=
opic:</h4>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485850732562 {padding: 0px;}
div.rbtoc1485850732562 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485850732562 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485850732562">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#ConvertingrequestparametersintoAPIobjects-Description">Desc=
ription</a></li>=20
<li><a href=3D"#ConvertingrequestparametersintoAPIobjects-Solution">Solutio=
n</a></li>=20
<li><a href=3D"#ConvertingrequestparametersintoAPIobjects-Example">Example<=
/a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#ConvertingrequestparametersintoAPIobjects-Furtherinformatio=
n">Further information</a></li>=20
<li><a href=3D"#ConvertingrequestparametersintoAPIobjects-Migratingyourcurr=
entapplication">Migrating your current application</a></li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
</div>=20
</div>=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_2763_1990135610.1485850732572--
