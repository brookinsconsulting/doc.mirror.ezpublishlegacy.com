Message-ID: <1095349986.828.1413881738552.JavaMail.confluence@ip-10-127-227-192>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_827_652602745.1413881738551"

------=_Part_827_652602745.1413881738551
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Cross SiteAccess links</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

#main {
    padding-bottom: 1em !important; /* The default padding of 6em is too mu=
ch for printouts */
}

body {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    font-size: 10pt;
    line-height: 1.2;
}

body, #full-height-container, #main, #page, #content, .has-personal-sidebar=
 #content {
    background: #fff    !important;
    color: #000         !important;
    border: 0           !important;
    width: 100%         !important;
    height: auto        !important;
    min-height: auto    !important;
    margin: 0           !important;
    padding: 0          !important;
    display: block      !important;
}

a, a:link, a:visited, a:focus, a:hover, a:active {
    color: #000;
}
#content h1,
#content h2,
#content h3,
#content h4,
#content h5,
#content h6 {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    page-break-after: avoid;
}
pre {
    font-family: Monaco, "Courier New", monospace;
}

#header,
.aui-header-inner,
#navigation,
#sidebar,
.sidebar,
#personal-info-sidebar,
.ia-fixed-sidebar,
.page-actions,
.navmenu,
.ajs-menu-bar,
.noprint,
.inline-control-link,
.inline-control-link a,
a.show-labels-editor,
.global-comment-actions,
.comment-actions,
.quick-comment-container,
#addcomment {
    display: none !important;
}

.comment .date::before {
    content: none !important; /* remove middot for print view */
}

h1.pagetitle img {
    height: auto;
    width: auto;
}

.print-only {
    display: block;
}
#footer {
    position: relative !important; /* CONF-17506 Place the footer at end of=
 the content */
    margin: 0;
    padding: 0;
    background: none;
    clear: both;
}

#poweredby {
    border-top: none;
    background: none;
}

#poweredby li.print-only {
    display: list-item;
    font-style: italic;
}

#poweredby li.noprint {
    display:none;
}


/* no width controls in print */
.wiki-content .table-wrap,
.wiki-content p,
.panel .codeContent,
.panel .codeContent pre,
.image-wrap {
    overflow: visible !important;
}

/* TODO - should this work? */
#children-section,
#comments-section .comment,
#comments-section .comment .comment-body,
#comments-section .comment .comment-content,
#comments-section .comment p {
    page-break-inside: avoid;
}

#page-children a {
    text-decoration: none;
}

/**
 hide twixies

 the specificity here is a hack because print styles
 are getting loaded before the base styles. */
#comments-section.pageSection .section-header,
#comments-section.pageSection .section-title,
#children-section.pageSection .section-header,
#children-section.pageSection .section-title,
.children-show-hide {
    padding-left: 0;
    margin-left: 0;
}

.children-show-hide.icon {
    display: none;
}

/* personal sidebar */
.has-personal-sidebar #content {
    margin-right: 0px;
}

.has-personal-sidebar #content .pageSection {
    margin-right: 0px;
}
-->
    </style>
</head>
<body>
    <h1>Cross SiteAccess links</h1>
    <div class=3D"Section1">
        <div class=3D"aui-message warning shadowed information-macro">=20
<p class=3D"title">Version compatibility</p>=20
<span class=3D"aui-icon icon-warning">Icon</span>=20
<div class=3D"message-content">=20
<p>This page is compatible with&nbsp;<strong>eZ Publish 5.3 / 2014.03</stro=
ng></p>=20
</div>=20
</div>=20
<p>&nbsp;</p>
<p>When using the <em>multisite</em> feature, it is sometimes useful to be =
able to <strong>generate cross-links</strong> between the different sites.<=
br /> This allows to link different resources referenced in a same content =
repository, but configured independently with different tree roots.</p>
<h2 id=3D"CrossSiteAccesslinks-Usage">Usage</h2>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>Twig example</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: xml; gutter: false" style=3D"font-size=
:12px;">&nbsp;{# Linking a location #}=20
&lt;a href=3D&quot;{{ url( location, {&quot;siteaccess&quot;: &quot;some_si=
teaccess_name&quot;} ) }}&quot;&gt;{{ ez_content_name( content ) }}&lt;/a&g=
t;

{# Linking a regular route #}=20
&lt;a href=3D&quot;{{ url( &quot;some_route_name&quot;, {&quot;siteaccess&q=
uot;: &quot;some_siteaccess_name&quot;} ) }}&quot;&gt;Hello world!&lt;/a&gt=
;</pre>=20
</div>
</div>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>PHP example</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"theme: Eclipse; brush: php; gutter: false" style=3D"font-size=
:12px;">namespace Acme\TestBundle\Controller;

use eZ\Bundle\EzPublishCoreBundle\Controller as BaseController;
use Symfony\Component\Routing\Generator\UrlGeneratorInterface;

class MyController extends BaseController
{
    public function fooAction()
    {
        // ...

        $location =3D $this-&gt;getRepository()-&gt;getLocationService()-&g=
t;loadLocation( 123 );
        $locationUrl =3D $this-&gt;generateUrl(
            $location,
            array( 'siteaccess' =3D&gt; 'some_siteaccess_name' ),
            UrlGeneratorInterface::ABSOLUTE_PATH
        );

        $regularRouteUrl =3D $this-&gt;generateUrl(
            'some_route_name',
            array( 'siteaccess' =3D&gt; 'some_siteaccess_name' ),
            UrlGeneratorInterface::ABSOLUTE_PATH
        );

        // ...
    }
}</pre>=20
</div>
</div>
<div class=3D"highlight highlight-php">
<pre>&nbsp;</pre>
</div>=20
<div class=3D"aui-message success shadowed information-macro">=20
<span class=3D"aui-icon icon-success">Icon</span>=20
<div class=3D"message-content">=20
<strong>Important</strong>: As SiteAccess matchers can involve hosts and po=
rts, it is=20
<strong>highly recommended</strong> to generate cross-siteaccess
<br /> links in the absolute form (e.g. using=20
<code>url()</code> Twig helper).=20
</div>=20
</div>=20
<h2 id=3D"CrossSiteAccesslinks-Troubleshooting">Troubleshooting</h2>
<ul>
<li>The<strong> first matcher succeeding always wins</strong>, so be carefu=
l when using <em>catch-all</em> matchers like <code>URIElement</code>.</li>
<li>If passed SiteAccess name is not a valid one, an <code>InvalidArgumentE=
xception</code> will be thrown.</li>
<li>If matcher used to match provided SiteAccess doesn't implement <code>Ve=
rsatileMatcher</code>, the link will be generated for the current SiteAcces=
s.</li>
<li>When using <code>Compound\LogicalAnd</code>, all inner matchers <strong=
>must match</strong>. If at least one matcher doesn't implement <code>Versa=
tileMatcher</code>, it will fail.</li>
<li>When using <code>Compound\LogicalOr</code>, the first inner matcher suc=
ceeding will win.</li>
</ul>
<h2 id=3D"CrossSiteAccesslinks-Underthehood">Under the hood</h2>
<p>To implement this feature, a new <code>VersatileMatcher</code> was added=
 to allow SiteAccess matchers to be able to <em>reverse-match</em>.<br /> A=
ll existing matchers implement this new interface, except the Regexp based =
matchers which have been deprecated.</p>
<p>The SiteAccess router has been added a <code>matchByName()</code> method=
 to reflect this addition. Abstract URLGenerator and <code>DefaultRouter</c=
ode> have been updated as well.</p>=20
<div class=3D"aui-message hint shadowed information-macro">=20
<span class=3D"aui-icon icon-hint">Icon</span>=20
<div class=3D"message-content">=20
<strong>Note:</strong> SiteAccess router public methods have also been extr=
acted to a new interface,=20
<code>SiteAccessRouterInterface</code>.=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_827_652602745.1413881738551--
