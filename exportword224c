Message-ID: <1959099537.2736.1485850577950.JavaMail.confluence@ip-10-127-227-164>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_2735_1266915100.1485850577949"

------=_Part_2735_1266915100.1485850577949
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Landing Page Field Type (Enterprise)</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: #fff !important;
        color: #000 !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: #000;
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }
}
-->
    </style>
</head>
<body>
    <h1>Landing Page Field Type (Enterprise)</h1>
    <div class=3D"Section1">
        <div class=3D"contentLayout2">=20
<div class=3D"columnLayout two-right-sidebar" data-layout=3D"two-right-side=
bar">=20
<div class=3D"cell normal" data-type=3D"normal">=20
<div class=3D"innerCell">=20
<p>Landing Page Field Type represents a page with a layout consisting of mu=
ltiple zones; each of which can in turn contain blocks.</p>
<div class=3D"confluence-information-macro confluence-information-macro-not=
e">
<span class=3D"aui-icon aui-icon-small aui-iconfont-warning confluence-info=
rmation-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Landing Page Field Type is only used in the Landing Page Content Type th=
at is included in eZ Enterprise.</p>
<p>The structure of the Landing Page Content Type should not be modified, a=
s it may cause errors.</p>
</div>
</div>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<tbody>
<tr>
<th class=3D"confluenceTh">Name</th>
<th class=3D"confluenceTh">Internal name</th>
<th class=3D"confluenceTh">Expected input</th>
</tr>
<tr>
<td class=3D"confluenceTd"><code>Landing page</code></td>
<td class=3D"confluenceTd"><code>ezlandingpage</code></td>
<td class=3D"confluenceTd"><code>string (JSON)</code></td>
</tr>
</tbody>
</table>
</div>
<p>&nbsp;</p>
<h1 id=3D"LandingPageFieldType(Enterprise)-Layoutandzones">Layout and zones=
</h1>
<p>Layout is the way in which a Landing Page is divided into zones.&nbsp;<s=
pan class=3D"DEF"><span class=3D"DEF">Zones are organized structures that a=
re deployed over a layout in a particular position</span></span>.</p>
<p>The placement of zones is defined in a template which is a part of the l=
ayout configuration. You can modify the template in order to define your ow=
n system of zones.</p>
<p>For information on how to create and configure new blocks for the Landin=
g Page, see <a href=3D"/pages/viewpage.action?pageId=3D31430259">Creating L=
anding Page layouts (Enterprise)</a>.</p>
<p>&nbsp;</p>
<h1 id=3D"LandingPageFieldType(Enterprise)-Blocks">Blocks</h1>
<p>For information on how to create and configure new blocks for the Landin=
g Page, see <a href=3D"/pages/viewpage.action?pageId=3D31430614">Creating L=
anding Page blocks (Enterprise).</a></p>
<p>&nbsp;</p>
<h1 id=3D"LandingPageFieldType(Enterprise)-RenderingLandingPages">Rendering=
 Landing Pages</h1>
<p><span lang=3D"en">Landing page rendering takes place while editing or vi=
ewing.</span></p>
<p>When rendering a Landing Page, its zones are passed to the layout as a <=
code>zones</code> array with a <code>blocks</code> array each. You can simp=
ly access them using twig (e.g.<strong>&nbsp;</strong><code>{{ zones[0].id =
}}</code> ).</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p>Each div that's a zone or zone's container should have data attributes:<=
/p>
<ul>
<li><code>data-studio-zones-container</code> for a div containing zones</li=
>
<li><code>data-studio-zone</code> with zone ID as a value for a zone contai=
ner</li>
</ul>
</div>
</div>
<p>&nbsp;</p>
<p>To render a block inside the layout, use twig <code>render_esi()</code> =
function to call <code> ez_block:renderBlockAction</code>.</p>
<div class=3D"confluence-information-macro confluence-information-macro-inf=
ormation">
<span class=3D"aui-icon aui-icon-small aui-iconfont-info confluence-informa=
tion-macro-icon"></span>
<div class=3D"confluence-information-macro-body">
<p><code> ez_block </code> is an alias to <code>EzSystems\LandingPageFieldT=
ypeBundle\Controller\BlockControlle</code><strong><code>r</code> </strong><=
/p>
</div>
</div>
<p>&nbsp;</p>
<p>An action has the following parameters:</p>
<ul>
<li><code> contentId</code>&nbsp;=E2=80=93 ID of content which can be acces=
sed by <code> contentInfo.id </code></li>
<li><code> blockId</code>&nbsp;=E2=80=93 ID of block which you want to rend=
er</li>
</ul>
<p>&nbsp;</p>
<p>Example usage:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{{ render_esi(controller('ez_block:renderBlockAction', {
=09=09'contentId': contentInfo.id,
    =09'blockId': block.id
=09}))&nbsp;
}}</pre>=20
</div>
</div>
<p>&nbsp;</p>
<p>As a whole a sample layout could look as follows:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeHeader panelHeader pdl" style=3D"border-bottom-width: 1px=
;">
<b>landing_page_simple_layout.html.twig</b>
</div>
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: xml; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">{# a layer of the required "data-studio-zones-container" attribute,=
 in which zones will be displayed #}
&lt;div data-studio-zones-container&gt;
=09 {# a layer of the required attribute for the displayed zone #}
=09&nbsp;&lt;div data-studio-zone=3D"{{ zones[0].id }}"&gt;=09=09=09=09=09=
=09=09=09=09=09
=09=09{# If a zone with [0] index contains any blocks #}
=09=09{% if zones[0].blocks %}=09=09=09=09=09=09=09=09=09=09=09=09=09
    =09=09{# for each block #}
=09=09=09{% for block in blocks %}=09=09=09=09=09=09=09=09=09=09=09=09
    =09=09=09{# create a new layer with appropriate id #}
=09=09=09=09&lt;div class=3D"landing-page__block block_{{ block.type }}"&gt=
;=09=09=09
        =09=09=09{# render the block by using the "ez_block:renderBlockActi=
on" controller #}=09
                    {# contentInfo.id is the id of the current content item=
, block.id is the id of the current block #}
=09=09=09=09=09{{ render_esi(controller('ez_block:renderBlockAction', {=09=
=09
            =09=09=09=09'contentId': contentInfo.id,=09=09=09=09=09=09=09
            =09=09=09=09'blockId': block.id=09=09=09=09=09=09=09=09=09=09
        =09=09=09=09}))&nbsp;
=09=09=09=09=09}}
    =09=09=09&lt;/div&gt;
=09=09=09{% endfor %}
=09=09{% endif %}
    &lt;/div&gt;
&lt;/div&gt;

</pre>=20
</div>
</div>
<p>&nbsp;</p>
<h2 id=3D"LandingPageFieldType(Enterprise)-Viewingtemplate">Viewing templat=
e</h2>
<p>Your view is populated with data (parameters) retrieved from the <code>g=
etTemplateParameters()</code> method which must be implemented in your bloc=
k's class.</p>
<p>Example:</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"brush: php; gutter: false; theme: Eclipse" style=3D"font-size=
:12px;">/**
    * @param \EzSystems\LandingPageFieldTypeBundle\FieldType\LandingPage\Mo=
del\BlockValue $blockValue
    *
    * @return array
    */
   public function getTemplateParameters(BlockValue $blockValue)
   {
       $attributes =3D $blockValue-&gt;getAttributes();
       $limit =3D (isset($attributes['limit'])) ? $attributes['limit'] : 10=
;
       $offset =3D (isset($attributes['offset'])) ? $attributes['offset'] :=
 0;
       $parameters =3D [
           'title' =3D&gt; $attributes['title'],
           'limit' =3D&gt; $limit,
           'offset' =3D&gt; $offset,
           'feeds' =3D&gt; $this-&gt;RssProvider-&gt;getFeeds($attributes['=
url']),
       ];
       return $parameters;
   }</pre>=20
</div>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
</div>=20
</div>=20
<div class=3D"cell aside" data-type=3D"aside">=20
<div class=3D"innerCell">=20
<h4 id=3D"LandingPageFieldType(Enterprise)-Inthistopic:">In this topic:</h4=
>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1485850577929 {padding: 0px;}
div.rbtoc1485850577929 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1485850577929 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1485850577929">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#LandingPageFieldType(Enterprise)-Layoutandzones">Layout and=
 zones</a></li>=20
<li><a href=3D"#LandingPageFieldType(Enterprise)-Blocks">Blocks</a></li>=20
<li><a href=3D"#LandingPageFieldType(Enterprise)-RenderingLandingPages">Ren=
dering Landing Pages</a>=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#LandingPageFieldType(Enterprise)-Viewingtemplate">Viewing t=
emplate</a></li>=20
</ul> </li>=20
</ul>=20
</div>
<p></p>
<br>
<h4 id=3D"LandingPageFieldType(Enterprise)-Relatedtopics:">Related topics:<=
/h4>
<p><a href=3D"/pages/viewpage.action?pageId=3D31430259">Creating Landing Pa=
ge layouts (Enterprise)</a></p>
<p><a href=3D"/pages/viewpage.action?pageId=3D31430614">Creating Landing Pa=
ge blocks (Enterprise)</a></p>
</div>=20
</div>=20
</div>=20
</div>
    </div>
</body>
</html>
------=_Part_2735_1266915100.1485850577949--
